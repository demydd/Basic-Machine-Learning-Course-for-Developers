conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeHist(data_all, rnorm(qty), variable, top_items
, qty, bins, ylim, conf_interval, conf_interval_type, dfcurve)
)
sum(!is.na(data))
length(data)
max(xxx)
min(xxx)
hist(data, breaks = bins, main = paste("Initial data, confidence ="))
hist(scale(data, center = TRUE, scale = FALSE), breaks = bins, main = paste("Centered data, confidence ="))
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeHistScaled( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
hist(scale(data), breaks = bins, prob = TRUE, ylim=c(0,ylim), main = paste("Scaled histogram of conf.interval")))
dev.off()
hist(scale(data), breaks = bins, prob = TRUE, ylim=c(0,ylim), main = paste("Scaled histogram of conf.interval"))
ylim = 1
hist(scale(data), breaks = bins, prob = TRUE, ylim=c(0,ylim), main = paste("Scaled histogram of conf.interval"))
curve(dchisq(x,2),col="red",lty=2,add=TRUE)
p9 <- ggplot(data.frame(x = c(-4, 4)), aes(x = x)) + stat_function(fun = dnorm, aes(colour = "dodgerblue3")) + stat_function(fun = dt) +
scale_x_continuous(name = "Probability", breaks = seq(0, 1, 0.2), limits=c(0, 1))
p9
p9 <- ggplot(data.frame(x = c(-4, 4)), aes(x = x)) + stat_function(fun = dnorm, aes(colour = "dodgerblue3")) + stat_function(fun = dt) +
scale_x_continuous(name = "Probability", breaks = seq(-1, 1, 0.2), limits=c(0, 1))
p9
p9 <- ggplot(data.frame(x = c(-4, 4)), aes(x = x)) + stat_function(fun = dnorm, aes(colour = "dodgerblue3")) + stat_function(fun = dt) +
scale_x_continuous(name = "Probability", breaks = seq(-1, 1, 0.2), limits=c(-1, 1))
p9
p9 <- ggplot(data.frame(x = c(-4, 4)), aes(x = x)) + stat_function(fun = dnorm, aes(colour = "dodgerblue3")) + stat_function(fun = dt) +
scale_x_continuous(name = "Probability", breaks = seq(-1, 1, 0.2), limits=c(-1, 1))
p9
p9 <- ggplot(data.frame(x = c(-4, 4)), aes(x = x)) + stat_function(fun = dnorm, aes(colour = "dodgerblue3"))
+ stat_function(fun = dt, aes(colour = "magenta")) +
scale_x_continuous(name = "Probability", breaks = seq(-1, 1, 0.2), limits=c(-1, 1))
p9
p9 <- ggplot(data.frame(x = c(-4, 4)), aes(x = x)) + stat_function(fun = dnorm, aes(colour = "dodgerblue3"))
+ stat_function(fun = dt, aes(colour = "green")) +
scale_x_continuous(name = "Probability", breaks = seq(-1, 1, 0.2), limits=c(-1, 1))
p9
makeDistributions = function(
data_init
,data_norm
,variable
,top_items
,qty
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
){
name <- colnames(data_init)[colnames(data_init) == variable]
data <- unlist(data_init[, ..name])
data <- data[order(data)]
data <- data[1:(length(data) - top_items)]
#per quantity
hist(data, breaks = bins, main = paste("Initial data, confidence =", conf_interval))
#normal distribution
hist(scale(data, center = TRUE, scale = TRUE), breaks = bins, prob = TRUE, ylim=c(0,ylim), main = paste("Centered & Scaled data, confidence =", conf_interval))
curve(dnorm(x, mean(scale(data, center = TRUE, scale = TRUE)), sd(scale(data, center = TRUE, scale = TRUE))), add=TRUE, col="darkblue", lwd=2)
#chi distribution
hist(scale(data), breaks = bins, prob = TRUE, ylim=c(0,ylim), main = paste("Chi distribution", conf_interval))
curve(dchisq(x,2),col="red",lty=2,add=TRUE)
}
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
dev.off()
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
makeDistributions = function(
data_init
,data_norm
,variable
,top_items
,qty
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
){
name <- colnames(data_init)[colnames(data_init) == variable]
data <- unlist(data_init[, ..name])
data <- data[order(data)]
data <- data[1:(length(data) - top_items)]
#per quantity
hist(data, breaks = bins, main = paste("Initial data, confidence =", conf_interval))
#normal distribution
hist(scale(data), breaks = bins, prob = TRUE, ylim=c(0,ylim), main = paste("Normal distribution, confidence =", conf_interval))
curve(dnorm(x, mean(scale(data, center = TRUE, scale = TRUE)), sd(scale(data, center = TRUE, scale = TRUE))), add=TRUE, col="darkblue", lwd=2)
#chi distribution
hist(scale(data), breaks = bins, prob = TRUE, ylim=c(0,ylim), main = paste("Chi distribution, confidence =", conf_interval))
curve(dchisq(x,2),col="red",lty=2,add=TRUE)
}
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
dev.off()
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
makeDistributions = function(
data_init
,data_norm
,variable
,top_items
,qty
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
){
name <- colnames(data_init)[colnames(data_init) == variable]
data <- unlist(data_init[, ..name])
data <- data[order(data)]
data <- data[1:(length(data) - top_items)]
#per quantity
hist(data, breaks = bins, main = paste("Initial data, confidence =", conf_interval))
#normal distribution
#hist(scale(data), breaks = bins, prob = TRUE, ylim=c(0,ylim), main = paste("Normal distribution, confidence =", conf_interval))
#curve(dnorm(x, mean(scale(data, center = TRUE, scale = TRUE)), sd(scale(data, center = TRUE, scale = TRUE))), add=TRUE, col="darkblue", lwd=2)
#chi distribution
#hist(scale(data), breaks = bins, prob = TRUE, ylim=c(0,ylim), main = paste("Chi distribution, confidence =", conf_interval))
#curve(dchisq(x,2),col="red",lty=2,add=TRUE)
}
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
dev.off()
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
data_all
variable <- 'AMT_INCOME_TOTAL'
debugonce(makeDistributions)
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
data
conf_interval
bins
#per quantity
hist(data, breaks = bins, main = paste("Initial data, confidence =", conf_interval))
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
debugonce(makeDistributions)
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeHist(data_all, rnorm(qty), variable, top_items
, qty, bins, ylim, conf_interval, conf_interval_type, dfcurve)
)
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
debugonce(makeDistributions)
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
data_init
data_norm
variable
top_items
qty
bins
ylim
conf_interval
conf_interval_type
dfcurve
dev.off()
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
makeDistributions = function(
data_init
,data_norm
,variable
,top_items
,qty
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
){
name <- colnames(data_init)[colnames(data_init) == variable]
data <- unlist(data_init[, ..name])
data <- data[order(data)]
data <- data[1:(length(data) - top_items)]
par(mfrow=c(3, 1))
#per quantity
hist(data, breaks = bins, main = paste("Initial histogram, conf.interval", conf_interval, "qty =", ifelse(qty > length(data), length(data), qty)))
#normal distribution
#hist(scale(data), breaks = bins, prob = TRUE, ylim=c(0,ylim), main = paste("Normal distribution, confidence =", conf_interval))
#curve(dnorm(x, mean(scale(data, center = TRUE, scale = TRUE)), sd(scale(data, center = TRUE, scale = TRUE))), add=TRUE, col="darkblue", lwd=2)
#chi distribution
#hist(scale(data), breaks = bins, prob = TRUE, ylim=c(0,ylim), main = paste("Chi distribution, confidence =", conf_interval))
#curve(dchisq(x,2),col="red",lty=2,add=TRUE)
}
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
manipulate(
variable = picker(vars),
top_items = slider(1, 1000),
qty = slider(1, 1000000),
bins = slider(1,100),
ylim = slider(0,1),
conf_interval_type = picker('none', 'left', 'right', 'both'),
conf_interval = picker(0.68, 0.9, 0.95, 0.99),
dfcurve = picker('no', 'yes'),
makeDistributions( data_all
,rnorm(qty)
,variable
,qty
,top_items
,bins
,ylim
,conf_interval
,conf_interval_type
,dfcurve
)
)
rm(list = ls())
